<svg id="mermaidChart0" width="1200" height="950.7042253521126" viewBox="0 0 384 484" style="width: 1192; height: 950.7042253521126;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><style type="text/css" title="mermaid-svg-internal-css">/* Flowchart variables */
/* Sequence Diagram variables */
/* Gantt chart variables */
.mermaid .label {
  color: #333;
}
.node rect,
.node circle,
.node ellipse,
.node polygon {
  fill: #ECECFF;
  stroke: #CCCCFF;
  stroke-width: 1px;
}
.arrowheadPath {
  fill: #333333;
}
.edgePath .path {
  stroke: #333333;
}
.edgeLabel {
  background-color: #e8e8e8;
}
.cluster rect {
  fill: #ffffde !important;
  rx: 4 !important;
  stroke: #aaaa33 !important;
  stroke-width: 1px !important;
}
.cluster text {
  fill: #333;
}
.actor {
  stroke: #CCCCFF;
  fill: #ECECFF;
}
text.actor {
  fill: black;
  stroke: none;
}
.actor-line {
  stroke: grey;
}
.messageLine0 {
  stroke-width: 1.5;
  stroke-dasharray: "2 2";
  marker-end: "url(#arrowhead)";
  stroke: #333;
}
.messageLine1 {
  stroke-width: 1.5;
  stroke-dasharray: "2 2";
  stroke: #333;
}
#arrowhead {
  fill: #333;
}
#crosshead path {
  fill: #333 !important;
  stroke: #333 !important;
}
.messageText {
  fill: #333;
  stroke: none;
}
.labelBox {
  stroke: #CCCCFF;
  fill: #ECECFF;
}
.labelText {
  fill: black;
  stroke: none;
}
.loopText {
  fill: black;
  stroke: none;
}
.loopLine {
  stroke-width: 2;
  stroke-dasharray: "2 2";
  marker-end: "url(#arrowhead)";
  stroke: #CCCCFF;
}
.note {
  stroke: #aaaa33;
  fill: #fff5ad;
}
.noteText {
  fill: black;
  stroke: none;
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 14px;
}
/** Section styling */
.section {
  stroke: none;
  opacity: 0.2;
}
.section0 {
  fill: rgba(102, 102, 255, 0.49);
}
.section2 {
  fill: #fff400;
}
.section1,
.section3 {
  fill: white;
  opacity: 0.2;
}
.sectionTitle0 {
  fill: #333;
}
.sectionTitle1 {
  fill: #333;
}
.sectionTitle2 {
  fill: #333;
}
.sectionTitle3 {
  fill: #333;
}
.sectionTitle {
  text-anchor: start;
  font-size: 11px;
  text-height: 14px;
}
/* Grid and axis */
.grid .tick {
  stroke: lightgrey;
  opacity: 0.3;
  shape-rendering: crispEdges;
}
.grid path {
  stroke-width: 0;
}
/* Today line */
.today {
  fill: none;
  stroke: red;
  stroke-width: 2px;
}
/* Task styling */
/* Default task */
.task {
  stroke-width: 2;
}
.taskText {
  text-anchor: middle;
  font-size: 11px;
}
.taskTextOutsideRight {
  fill: black;
  text-anchor: start;
  font-size: 11px;
}
.taskTextOutsideLeft {
  fill: black;
  text-anchor: end;
  font-size: 11px;
}
/* Specific task settings for the sections*/
.taskText0,
.taskText1,
.taskText2,
.taskText3 {
  fill: white;
}
.task0,
.task1,
.task2,
.task3 {
  fill: #8a90dd;
  stroke: #534fbc;
}
.taskTextOutside0,
.taskTextOutside2 {
  fill: black;
}
.taskTextOutside1,
.taskTextOutside3 {
  fill: black;
}
/* Active task */
.active0,
.active1,
.active2,
.active3 {
  fill: #bfc7ff;
  stroke: #534fbc;
}
.activeText0,
.activeText1,
.activeText2,
.activeText3 {
  fill: black !important;
}
/* Completed task */
.done0,
.done1,
.done2,
.done3 {
  stroke: grey;
  fill: lightgrey;
  stroke-width: 2;
}
.doneText0,
.doneText1,
.doneText2,
.doneText3 {
  fill: black !important;
}
/* Tasks on the critical line */
.crit0,
.crit1,
.crit2,
.crit3 {
  stroke: #ff8888;
  fill: red;
  stroke-width: 2;
}
.activeCrit0,
.activeCrit1,
.activeCrit2,
.activeCrit3 {
  stroke: #ff8888;
  fill: #bfc7ff;
  stroke-width: 2;
}
.doneCrit0,
.doneCrit1,
.doneCrit2,
.doneCrit3 {
  stroke: #ff8888;
  fill: lightgrey;
  stroke-width: 2;
  cursor: pointer;
  shape-rendering: crispEdges;
}
.doneCritText0,
.doneCritText1,
.doneCritText2,
.doneCritText3 {
  fill: black !important;
}
.activeCritText0,
.activeCritText1,
.activeCritText2,
.activeCritText3 {
  fill: black !important;
}
.titleText {
  text-anchor: middle;
  font-size: 18px;
  fill: black;
}
g.classGroup text {
  fill: #9370DB;
  stroke: none;
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 10px;
}
g.classGroup rect {
  fill: #ECECFF;
  stroke: #9370DB;
}
g.classGroup line {
  stroke: #9370DB;
  stroke-width: 1;
}
svg .classLabel .box {
  stroke: none;
  stroke-width: 0;
  fill: #ECECFF;
  opacity: 0.5;
}
svg .classLabel .label {
  fill: #9370DB;
  font-size: 10px;
}
.relation {
  stroke: #9370DB;
  stroke-width: 1;
  fill: none;
}
.composition {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
#compositionStart {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
#compositionEnd {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
.aggregation {
  fill: #ECECFF;
  stroke: #9370DB;
  stroke-width: 1;
}
#aggregationStart {
  fill: #ECECFF;
  stroke: #9370DB;
  stroke-width: 1;
}
#aggregationEnd {
  fill: #ECECFF;
  stroke: #9370DB;
  stroke-width: 1;
}
#dependencyStart {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
#dependencyEnd {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
#extensionStart {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
#extensionEnd {
  fill: #9370DB;
  stroke: #9370DB;
  stroke-width: 1;
}
.node text {
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 14px;
}
div.mermaidTooltip {
  position: absolute;
  text-align: center;
  max-width: 200px;
  padding: 2px;
  font-family: 'trebuchet ms', verdana, arial;
  font-size: 12px;
  background: #ffffde;
  border: 1px solid #aaaa33;
  border-radius: 2px;
  pointer-events: none;
  z-index: 100;
}
</style><g/><g class="grid" transform="translate(75, 434)"><g class="tick" transform="translate(0,0)" style="opacity: 1;"><line y2="-399" x2="0"/><text dy="1em" y="3" x="0" fill="#000" stroke="none" font-size="10" style="text-anchor: middle;">w. 01</text></g><g class="tick" transform="translate(102,0)" style="opacity: 1;"><line y2="-399" x2="0"/><text dy="1em" y="3" x="0" fill="#000" stroke="none" font-size="10" style="text-anchor: middle;">w. 02</text></g><g class="tick" transform="translate(205,0)" style="opacity: 1;"><line y2="-399" x2="0"/><text dy="1em" y="3" x="0" fill="#000" stroke="none" font-size="10" style="text-anchor: middle;">w. 03</text></g><path class="domain" d="M0,0V0H234V0"/></g><g><rect x="0" y="48" width="346.5" height="24" class="section section0"/><rect x="0" y="72" width="346.5" height="24" class="section section0"/><rect x="0" y="96" width="346.5" height="24" class="section section0"/><rect x="0" y="120" width="346.5" height="24" class="section section0"/><rect x="0" y="144" width="346.5" height="24" class="section section1"/><rect x="0" y="168" width="346.5" height="24" class="section section1"/><rect x="0" y="192" width="346.5" height="24" class="section section1"/><rect x="0" y="216" width="346.5" height="24" class="section section1"/><rect x="0" y="240" width="346.5" height="24" class="section section1"/><rect x="0" y="264" width="346.5" height="24" class="section section1"/><rect x="0" y="288" width="346.5" height="24" class="section section2"/><rect x="0" y="312" width="346.5" height="24" class="section section2"/><rect x="0" y="336" width="346.5" height="24" class="section section2"/><rect x="0" y="360" width="346.5" height="24" class="section section0"/><rect x="0" y="384" width="346.5" height="24" class="section section0"/><rect x="0" y="408" width="346.5" height="24" class="section section0"/></g><g><rect rx="3" ry="3" x="75" y="50" width="29" height="20" class="task  done0"/><rect rx="3" ry="3" x="119" y="74" width="44" height="20" class="task  active0"/><rect rx="3" ry="3" x="163" y="98" width="73" height="20" class="task  task0"/><rect rx="3" ry="3" x="236" y="122" width="73" height="20" class="task  task0"/><rect rx="3" ry="3" x="75" y="146" width="15" height="20" class="task  doneCrit1"/><rect rx="3" ry="3" x="104" y="170" width="30" height="20" class="task  doneCrit1"/><rect rx="3" ry="3" x="134" y="194" width="43" height="20" class="task  activeCrit1"/><rect rx="3" ry="3" x="177" y="218" width="74" height="20" class="task  crit1"/><rect rx="3" ry="3" x="251" y="242" width="29" height="20" class="task  task1"/><rect rx="3" ry="3" x="280" y="266" width="14" height="20" class="task  task1"/><rect rx="3" ry="3" x="104" y="290" width="44" height="20" class="task  active2"/><rect rx="3" ry="3" x="148" y="314" width="12" height="20" class="task  task2"/><rect rx="3" ry="3" x="148" y="338" width="29" height="20" class="task  task2"/><rect rx="3" ry="3" x="177" y="362" width="44" height="20" class="task  task0"/><rect rx="3" ry="3" x="221" y="386" width="12" height="20" class="task  task0"/><rect rx="3" ry="3" x="233" y="410" width="30" height="20" class="task  task0"/><text font-size="11" x="109" y="63.5" text-height="20" class="taskTextOutsideRight taskTextOutside0  doneText0">Completed task            </text><text font-size="11" x="168" y="87.5" text-height="20" class="taskTextOutsideRight taskTextOutside0 activeText0">Active task               </text><text font-size="11" x="199.5" y="111.5" text-height="20" class="taskText taskText0 ">Future task               </text><text font-size="11" x="272.5" y="135.5" text-height="20" class="taskText taskText0 ">Future task2              </text><text font-size="11" x="95" y="159.5" text-height="20" class="taskTextOutsideRight taskTextOutside1  doneCritText1">Completed task in the critical line </text><text font-size="11" x="139" y="183.5" text-height="20" class="taskTextOutsideRight taskTextOutside1  doneCritText1">Implement parser and jison          </text><text font-size="11" x="182" y="207.5" text-height="20" class="taskTextOutsideRight taskTextOutside1 activeCritText1 critText1">Create tests for parser             </text><text font-size="11" x="172" y="231.5" text-height="20" class="taskTextOutsideLeft taskTextOutside1  critText1">Future task in critical line        </text><text font-size="11" x="246" y="255.5" text-height="20" class="taskTextOutsideLeft taskTextOutside1 ">Create tests for renderer           </text><text font-size="11" x="275" y="279.5" text-height="20" class="taskTextOutsideLeft taskTextOutside1 ">Add to mermaid                      </text><text font-size="11" x="153" y="303.5" text-height="20" class="taskTextOutsideRight taskTextOutside2 activeText2">Describe gantt syntax               </text><text font-size="11" x="165" y="327.5" text-height="20" class="taskTextOutsideRight taskTextOutside2 ">Add gantt diagram to demo page      </text><text font-size="11" x="143" y="351.5" text-height="20" class="taskTextOutsideLeft taskTextOutside2 ">Add another diagram to demo page    </text><text font-size="11" x="226" y="375.5" text-height="20" class="taskTextOutsideRight taskTextOutside0 ">Describe gantt syntax               </text><text font-size="11" x="216" y="399.5" text-height="20" class="taskTextOutsideLeft taskTextOutside0 ">Add gantt diagram to demo page      </text><text font-size="11" x="228" y="423.5" text-height="20" class="taskTextOutsideLeft taskTextOutside0 ">Add another diagram to demo page    </text></g><g><text x="10" y="98" class="sectionTitle sectionTitle0">A section</text><text x="10" y="218" class="sectionTitle sectionTitle1">Critical tasks</text><text x="10" y="326" class="sectionTitle sectionTitle2">Documentation</text><text x="10" y="398" class="sectionTitle sectionTitle0">Last section</text></g><g class="today"><line x1="18647" x2="18647" y1="25" y2="459" class="today"/></g><text x="192" y="25" class="titleText">Adding GANTT diagram functionality to mermaid</text></svg>
